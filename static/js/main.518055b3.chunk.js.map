{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handlechange","e","target","onSubmit","preventDefault","id","Math","floor","random","text","className","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodo","updateTodos","removeArr","filter","todoId","newvalue","prev","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.518055b3.chunk.js","sourcesContent":["import React,{useState,useEffect,useRef} from 'react'\r\n\r\nfunction TodoForm(props) {\r\n    const[input,setInput]=useState(props.edit?props.edit.value:'');\r\n    const inputRef=useRef(null);\r\n    useEffect(()=>{\r\n        inputRef.current.focus();\r\n    })\r\n    const handlechange=(e)=>{\r\n        setInput(e.target.value)\r\n    }\r\n    \r\n\r\n    const handelsubmite =(e)=>{\r\n        e.preventDefault();\r\n        props.onSubmit({\r\n            id:Math.floor(Math.random()*10000),\r\n            text:input\r\n        });\r\n        setInput('')\r\n    }\r\n\r\n    return (\r\n          <form onSubmit={handelsubmite} className='todo-form'>\r\n          {props.edit ?(\r\n           <>\r\n           <input\r\n            type=\"text\"\r\n            placeholder=\" Update Item\"\r\n            value={input}\r\n            name=\"text\"\r\n            onChange={handlechange}\r\n            className='todo-input edit'\r\n            ref={inputRef}\r\n          />\r\n          <button className='todo-button edit'>Update Todo</button>\r\n           </>\r\n          ):(\r\n            <>\r\n            <input\r\n            type=\"text\"\r\n            placeholder=\" Add a Todo\"\r\n            value={input}\r\n            name=\"text\"\r\n            onChange={handlechange}\r\n            className='todo-input'\r\n            ref={inputRef}\r\n          />\r\n          <button className='todo-button'>Add Todo</button>\r\n            </>\r\n          )}\r\n\r\n\r\n         </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm","import React,{useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { MdDelete } from 'react-icons/md';\r\nimport { FiEdit } from 'react-icons/fi';\r\n\r\nfunction Todo({todos,completeTodo,removeTodo,updateTodo}) {\r\n    const[edit,setEdit]=useState({\r\n        id:null,\r\n        value:'',\r\n    })\r\n    const submitupdate=value=>{\r\n        updateTodo(edit.id,value)\r\n        setEdit({\r\n            id:null,\r\n            value:''\r\n        })\r\n\r\n\r\n    };\r\n\r\n    if(edit.id)\r\n    {\r\n        return <TodoForm edit={edit} onSubmit={submitupdate}/>\r\n    }\r\n    return todos.map((todo,index)=>(\r\n     <div className={todo.isComplete ? 'todo-row complete':'todo-row'} key={index}>\r\n         <div key={todo.id} onClick={()=>completeTodo(todo.id)}>\r\n             {todo.text}\r\n         </div>\r\n         <div className='icons'>\r\n          <MdDelete onClick={()=>removeTodo(todo.id)} className='delete-icon'/>\r\n          <FiEdit onClick={()=>setEdit({id:todo.id, value:todo.text})} className='edit-icon'/>\r\n         </div>\r\n     </div>\r\n    ))\r\n}\r\n\r\nexport default Todo\r\n\r\n","import React,{useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport Todo from './Todo'\r\n\r\nfunction TodoList() {\r\n    const [todos,setTodos]= useState([])\r\n    const addTodo = (todo)=>{\r\n        if(!todo.text || /^\\s*$/.test(todo.text))\r\n        {\r\n            return\r\n        }\r\n        const newTodo=[todo,...todos]\r\n        setTodos(newTodo)\r\n    };\r\n    const updateTodo=(todoId,newvalue)=>{\r\n        if(!newvalue.text || /^\\s*$/.test(newvalue.text))\r\n        {\r\n            return\r\n        }\r\n        setTodos(prev=>prev.map(item=>(item.id===todoId?newvalue:item)))\r\n    }\r\n    const removeTodo=id=>{\r\n        const removeArr=[...todos].filter(todo=>todo.id!==id)\r\n        setTodos(removeArr)\r\n    }\r\n    const completeTodo=id=>{\r\n        let updateTodos=todos.map(todo => {\r\n            if(todo.id===id){\r\n                todo.isComplete=!todo.isComplete;\r\n            }\r\n            return todo;\r\n        })\r\n        setTodos(updateTodos);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n        <h1>What's The Plan For Today ?</h1>\r\n        <TodoForm onSubmit={addTodo}/>\r\n        <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo}/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList","import TodoList from './components/TodoList';\nimport './App.css';\n\n\nfunction App() {\n  \n  return (\n    <div className=\"todo-app\">\n    <TodoList/>\n\n      \n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}